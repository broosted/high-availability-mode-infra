---
- hosts: aws_ec2
  become: yes
  tasks:
    - name: run this shell command for certs
      shell: |
              sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
              echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
              cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
              br_netfilter
              EOF

              cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
              net.bridge.bridge-nf-call-ip6tables = 1
              net.bridge.bridge-nf-call-iptables = 1
              EOF
              sudo sysctl --system
              sudo apt-get update

    - name: install kube tools
      apt:
        name:
          - kubectl
          - kubelet
          - kubeadm
    - name: get private dns instance
      uri:
        url: "http://169.254.169.254/latest/meta-data/local-hostname"
        return_content: true
      register: private_dns_local
    - name: set hostname
      shell: |
              sudo hostnamectl set-hostname {{private_dns_local.content}}
    - name: copy file
      ansible.builtin.copy:
        src: kubeadm_config.yaml
        dest: kubeadm_config.yaml
        mode: 'u+x'

    - name: copy daemon.json file
      ansible.builtin.copy:
        src: daemon.json
        dest: /etc/docker/daemon.json
        mode: 'u+x'

    - name: copy aws-k8s-cni file
      ansible.builtin.copy:
        src: aws-k8s-cni.yaml
        dest: aws-k8s-cni.yaml
        mode: 'u+x'

    - name: reboot containerd
      shell: |
              sudo systemctl daemon-reload
              sudo systemctl start docker
              sudo systemctl restart containerd
              